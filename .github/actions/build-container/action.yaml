name: Build container
description: ""

inputs:
  input-path:
    description: Path to build docker image from
    default: "."
    required: true
  image-destination-host:
    description: "Where to upload the artifact to - if only local is desired just use \"localhost:5000\" - trailing slash is not allowed"
    default: ghcr.io
    required: true
  image-destination-name:
    description: "The desired name of the output artifact, defaults to: \"owner/repository\""
    default: "${{ github.repository }}"
    required: false
#  image-destination-tag-override:
#    description: "If the default tag generation is to be overridden"
#    default: ""
#    required: false


outputs:
  container-image:
    description: The random image name used for generation
    value: ${{ steps.build-image.outputs.container-image }}
  image-digest:
    description: The digest of the final image
    value: ${{ steps.push-image.outputs.image-digest }}

runs:
  using: composite
  steps:
    - name: Build docker container
      id: build-container
      uses: rohdef/action-build-scan-push-container@main
      with:
        dockerfile-path: ./rest-api/
        labels: |
          org.opencontainers.image.authors=Rohde Fischer (rohdef@rohdef.dk)
          org.opencontainers.image.vendor=Rohde Fischer
          org.opencontainers.image.ref.name=rfbpa-1
          org.opencontainers.image.title=rfbpa - A BPA manager
          org.opencontainers.image.description=A BPA administration tool for usage with AXP used by Handicapformidlingen

    - name: Push image
      id: push-image
      shell: bash
      run: |
        # This changes all uppercase characters to lowercase.
        IMAGE_ID=$(echo "${{ inputs.image-destination-host }}/${{ inputs.image-destination-name }}" | tr '[A-Z]' '[a-z]')

        # This strips the git ref prefix from the version.
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # This strips the "v" prefix from the tag name.
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        # This uses the Docker `latest` tag convention.
        [ "$VERSION" == "main" ] && VERSION=latest

        echo "Pushing image to"
        echo "$IMAGE_ID:$VERSION"

        docker tag \
          "${{ steps.build-container.outputs.imageid }}" \\
          "$IMAGE_ID:$VERSION"
        docker push "$IMAGE_ID:$VERSION"

        IMAGE_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' "$IMAGE_ID:$VERSION")
        echo "image-digest=$(echo ${IMAGE_DIGEST})" >> "$GITHUB_OUTPUT"
